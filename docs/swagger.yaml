definitions:
  model.User:
    properties:
      created_at:
        type: string
      id:
        type: integer
      password:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
host: localhost:8888
info:
  contact: {}
  description: This is Generate Invoice System API
  title: Generate Invoice System API Documentation
  version: "2.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: People can Login as a User
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.User'
      summary: Login User
      tags:
      - User
  /register:
    post:
      consumes:
      - application/json
      description: People can Register as a User
      parameters:
      - description: required
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.User'
      summary: Register User
      tags:
      - User
  /user:
    get:
      consumes:
      - application/json
      description: Admin can get all users information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.User'
      security:
      - JWT: []
      summary: Get All User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Admin or User can Delete their own account
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.User'
      security:
      - JWT: []
      summary: Delete User
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Admin Can Get User Information By Id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.User'
      security:
      - JWT: []
      summary: Get User By Id
      tags:
      - User
    put:
      consumes:
      - application/json
      description: User can Update their status or information
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.User'
      security:
      - JWT: []
      summary: Update User
      tags:
      - User
schemes:
- http
- https
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
